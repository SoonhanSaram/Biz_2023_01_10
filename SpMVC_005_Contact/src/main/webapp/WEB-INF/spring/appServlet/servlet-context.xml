<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<context:component-scan
		base-package="com.kyoungmin.contact.controller" />
		<context:component-scan
		base-package="com.kyoungmin.contact.service.impl" />

	<!-- css, js, image 등등 코드와 관계없는 일반적인 파일 저장소 지정 static resource 저장소 지정 만약 
		link href="/public/css/main.css 라고 요청이 들어오면 webapp/public/css/main.css 파일을 
		direct 로 응답하라 -->
	<resources mapping="/public/**" location="/public/" />

	<!-- view 가 있는 project 에서 Controller 로부터 rendering 요청이 들어오면 사용할 설정 값 만약, 
		Controller.method() 에서 return "home" 이라는 코드가 실행되면 "WEB-INF/views/" + "home" 
		+ ".jsp" 처럼 파일 경로 이름을 생성하여 파일을 찾아라 -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	



</beans:beans>
